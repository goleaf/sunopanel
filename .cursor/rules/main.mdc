---
description: 
globs: 
alwaysApply: true
---
- do not use for index pages cards, use only tables
- make for all design all template. create shared components and implement everywhere, and do not create astandalone blades. use from ative components all blades
- standartize all design for all pages, do not make different design layout, use one standart and implement it everywhere, if will detect - then refactor 
- remove and forget about function downloading files. remove all relations with downloading, all code, all files, all remembers about files downloading
requirements:
- for track as naming use a "title" and remove "name" from all project
- put in Logs every action and make tests from every function and action. make maximum stability of system reading logs and make all system maximum stability. after changing controller code, mofify test and run test and fix problem if will be. for every controller create own log file
- always after changing controller, check models, fields in model, relations in model, migrations, blades with new edited features, always check route and fix problems, make curl in route and read logs, after it fix problem
- do not make any export, remove if exists
do not use any php code in blades, move all php code from blades to controllers
make enums php files
do not use cdn, all javascript and css files use from npm install and from own server, do not use cdn servers
do not write css code to blades, use app.css, if in file will find, then move to app.css
do not write js code to blades, use app.js, if in file will find, then move to app.js
- run tests, run feature tests, create or modify by all functions, create and mofidy unit tests for all project, same and with another tests, make all tests for all project, modify existing and run tests, if will be problem - fix problem
- after editing migration, always check model for fields and relations. and make changes in controller and make changes in blades too. then make curl to route and fix all problems if will be and loop while all will be wihout problems. check logs and look for last changes does exists errors. check always last 1000 lines and fix all problems, after fixing empty log file and again go to route and check logs for errors and fix untill all will be fixed
- do not create anything with admin or another roles. i want to have standalone. as admin main page must be dashboard.blade.php and make all things in this blade
- never run commands like a "php artisan serve --host=0.0.0.0 --port=8000 & sleep 3 && curl -I http://localhost:8000 | cat" or something else. always use subdomain from .env
- never run commands like a "php artisan serve --host=0.0.0.0 --port=8000 &" or something like this, do not run serve comma. always use subdomain from .env

- check all controllers, make all tests as posible, i need to hasve 100% working application without authorization and wihout any cache. i want to have libraty with all features
- for seeds use only one file [TrackSeeder.php](mdc:database/seeders/TrackSeeder.php) and do not create additional. use only 1 file and thats all
- if controller's code was changed, change and blade too and always have up to date all blades with all requirements from @rules.mdc file
- do not make any simulations, i want to have only real information. if exists - remove all simulations and relations with it. make only real situation and code for using
- do not make artists and albums. make only playlists and collections by theme. do not create as a music library. make only playlists, genres, collections. if not exists someting from list what i dont want to have - remove files and all relations and another files. do not create in future
- make design for fullhd and mobile and tablet versions and for phone. remake all design. refactor all design in absolutly all files
- do not create migrations with modifications. always have have migartions only with creating, and make all changing in existing creating table migrations, and always run fresh after changing migrations. remove change table or fields migrations. always have up to date only with creating migrations. remove chaning migrations. use and modify only with creating. alwyas make foreight keys and indexing, and always after changing migration do all requirements from @main.mdc rules file
- do not use "curl -I "http://localhost:8000/playlists" | cat", use curl -I "https://sunopanel.prus.dev/playlists" | cat

--------------------

for seeds and for tests use this information bellow:

create seeder with this information:

𝗚𝗶𝗺𝗺𝗲 𝘆𝗼 𝗠𝗶𝗹𝗸.mp3|https://cdn1.suno.ai/d339f150-da9d-47e7-a241-86f9504c4298.mp3|https://cdn2.suno.ai/d339f150-da9d-47e7-a241-86f9504c4298_8c36669a.jpeg|Hypnotic trance,bubblegum-bass
Neon Threads.mp3|https://cdn1.suno.ai/c20d86aa-3936-4f0d-86c4-6e52f802aaa6.mp3|https://cdn2.suno.ai/image_c20d86aa-3936-4f0d-86c4-6e52f802aaa6.jpeg|bubblegum bass
Whispers from the Starlight.mp3|https://cdn1.suno.ai/6fd235bf-5ef5-477e-8872-925aa9fb5c81.mp3|https://cdn2.suno.ai/image_6fd235bf-5ef5-477e-8872-925aa9fb5c81.jpeg|bubblegum bass symphonic metal
Echoes of Solitude.mp3|https://cdn1.suno.ai/a30c4223-b2f0-4edb-a346-9f0d462b0d73.mp3|https://cdn2.suno.ai/image_a30c4223-b2f0-4edb-a346-9f0d462b0d73.jpeg|chillwave bubblegum bass
Who Stole my Fans!.mp3|https://cdn1.suno.ai/0243cd63-807b-4d4f-a110-42afb2c4233d.mp3|https://cdn2.suno.ai/0243cd63-807b-4d4f-a110-42afb2c4233d_30a25352.jpeg|tech-house,electrohouse,bubblegum bass
𝔹𝕒𝕟𝕒𝕟𝕚𝕔𝕠𝕣𝕟.mp3|https://cdn1.suno.ai/e598c515-5c35-404e-b2c7-b6990bfc6773.mp3|https://cdn2.suno.ai/e598c515-5c35-404e-b2c7-b6990bfc6773_41f53355.jpeg|Rave,bubblegum-bass,afrobeat,Urban-Pop
Technicolor Dreamscape.mp3|https://cdn1.suno.ai/854689aa-4894-454a-9f77-194f1b0771ee.mp3|https://cdn2.suno.ai/image_854689aa-4894-454a-9f77-194f1b0771ee.jpeg|bubblegum bass grime Bubblegum bass,grime,glitchy,sweet,edgy beats
Hangxiety.mp3|https://cdn1.suno.ai/e757aa19-5c33-4945-aaa1-1519b7890f0b.mp3|https://cdn2.suno.ai/e757aa19-5c33-4945-aaa1-1519b7890f0b_f4ffb4e2.jpeg|electrohouse,EDM,bubblegum bass,pop,folk
Bluegrass Bubblegum Heartache.mp3|https://cdn1.suno.ai/a11656f2-daa7-4233-8b0c-7a55134e5e34.mp3|https://cdn2.suno.ai/image_a11656f2-daa7-4233-8b0c-7a55134e5e34.jpeg|bluegrass bubblegum bass
Love Yourself Wonderland.mp3|https://cdn1.suno.ai/79b60772-ebad-4dae-ad0c-bcdc02d6e614.mp3|https://cdn2.suno.ai/image_79b60772-ebad-4dae-ad0c-bcdc02d6e614.jpeg|lo-fi bubblegum bass
𝗞𝗔𝗟𝗔𝗖𝗛𝗡𝗜𝗩𝗢𝗞 ft. Hiatus1984.mp3|https://cdn1.suno.ai/ab770f0e-5242-488a-8ec4-9c013ea158da.mp3|https://cdn2.suno.ai/ab770f0e-5242-488a-8ec4-9c013ea158da_97d7851b.jpeg|Frenchore,dubcore,wobble synth,bubblegum-bass
UPDATE! 3D.mp3|https://cdn1.suno.ai/ee4f4c39-f346-409b-b14e-24e4a4542cb9.mp3|https://cdn2.suno.ai/ee4f4c39-f346-409b-b14e-24e4a4542cb9_ccd47a63.jpeg|ringtone,ambient pop,bubblegum bass
three яйца.mp3|https://cdn1.suno.ai/5ec8adae-aea3-4557-8ade-49039558826f.mp3|https://cdn2.suno.ai/5ec8adae-aea3-4557-8ade-49039558826f_648bf1a1.jpeg|bubblegum bass,trap,drift
資本主義✦吾黨所宗.mp3|https://cdn1.suno.ai/5220f68c-6623-43db-a4c8-8071a471ab5e.mp3|https://cdn2.suno.ai/5220f68c-6623-43db-a4c8-8071a471ab5e_a151c500.jpeg|k-pop,girl group,bubblegum bass
(#) Burrito-Brunch-Thursday.mp3|https://cdn1.suno.ai/c1642c38-087d-445d-9b11-3cf45591aa43.mp3|https://cdn2.suno.ai/image_c1642c38-087d-445d-9b11-3cf45591aa43.jpeg|Bubblegum Bass Symphonic Metal Southern Rock Ska
Echoes from the Cosmos.mp3|https://cdn1.suno.ai/4aa6178d-fe2e-441d-b208-e6602bbf04c5.mp3|https://cdn2.suno.ai/image_4aa6178d-fe2e-441d-b208-e6602bbf04c5.jpeg|bubblegum bass symphonic metal
Quando o prato é muito disputado.mp3|https://cdn1.suno.ai/a1d7484b-d981-4d59-a9e1-5af07a177d6a.mp3|https://cdn2.suno.ai/image_a1d7484b-d981-4d59-a9e1-5af07a177d6a.jpeg|Chillwave Bubblegum Bass
Supply, как сопли Ха!.mp3|https://cdn1.suno.ai/7ac7b9c8-c705-4174-843d-424e1deb1c25.mp3|https://cdn2.suno.ai/image_7ac7b9c8-c705-4174-843d-424e1deb1c25.jpeg|bubblegum bass symphonic metal
𝐀𝐃𝐃𝐈𝐂𝐓𝐄𝐃.mp3|https://cdn1.suno.ai/5706fb67-8c53-46ce-b735-e4a2ea501297.mp3|https://cdn2.suno.ai/5706fb67-8c53-46ce-b735-e4a2ea501297_ae0db680.jpeg|hardstyle,bubblegum bass,major key,acid house,glitch witch,artcore
𝗘𝗹𝗲𝗰𝘁𝗿𝗼𝘀𝗵𝗼𝗰𝗸!.mp3|https://cdn1.suno.ai/97b094aa-29f9-4044-9131-a713dda6f37a.mp3|https://cdn2.suno.ai/97b094aa-29f9-4044-9131-a713dda6f37a_0e4d9ba2.jpeg|Drum and bass,dubstep,wobblestep,bubblegum bass,‑white noise,‑harsh distortion,‑heavy reverb wash,‑Static,‑grating,‑abrasive,‑jarring,‑reverb swel
-----------

in result i want to have all songs. save song name as normal string wihtout any encoding, save as simple text wihtout additional params in text, save song name as plain text, as raw text, as simplest text 
where:
track name: Neon Threads



bubblegum bass - this is one genre, in database this need to save as "Bubblegum bass" (first letter must be uppercase), and do not create if exists, if exists - then create and attach song to this genre and in web need to see if i will enter inside of genre i need see image, song name, size, created date and another all information in table with feature to click play and listen a song from mp4

for example for song will be "bubblegum bass,grime,glitchy,sweet,edgy beats" - where few genres by comma, but split by space. use only by comma. where for one song we have genres: bubblegum bass, grime, glitchy, sweet, edgy beats. do not create from: "bubblegum bass" two genres like a: "bubblegum" and "bass", if it exist - then fix it as now i want


---------------



















